# Read `man 6 sway` for a complete reference.
# vim: filetype=sway

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term kitty

# audio output
set $audio_out alsa_output.pci-0000_00_1f.3.analog-stereo

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $appmenu wofi --show drun | xargs swaymsg exec
set $climenu wofi --show run | xargs swaymsg exec

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill


### Idle configuration
exec swayidle -w \
    timeout 300 'swaylock' \
    timeout 600 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    timeout 1800 'systemctl suspend' \
    before-sleep 'swaylock'


### Input configuration

# keyboard
input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout us,de
}

# touchpad
input "1102:4618:DELL08B6:00_044E:120A_Touchpad" {
    natural_scroll enabled
    middle_emulation enabled
    tap enabled
    dwt enabled
}

# Media control:
XF86AudioPlay exec playerctl --player playerctld play-pause
XF86AudioNext exec playerctl --player playerctld next
XF86AudioPrev exec playerctl --player playerctld previous

# Audio control
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioRaiseVolume exec pamixer --allow-boost -ui 2 && dc -e "[`pamixer --get-volume`]sM 100d `pamixer --get-volume`<Mp" > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer --allow-boost -ud 2 && dc -e "[`pamixer --get-volume`]sM 100d `pamixer --get-volume`<Mp" > $SWAYSOCK.wob
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob )

# Brightness control
bindsym XF86MonBrightnessDown exec brightnessctl -q set 5%- && ( echo $((`brightnessctl get` * 100 / `brightnessctl m`)) > $SWAYSOCK.wob )
bindsym XF86MonBrightnessUp exec brightnessctl -q set +5% && ( echo $((`brightnessctl get` * 100 / `brightnessctl m`)) > $SWAYSOCK.wob )

# Borders:
default_border pixel 2
hide_edge_borders smart_no_gaps
# Exclude GNOME applications
# app_id is the name-part of the .desktop file
for_window [app_id="org.gnome.Nautilus"] border none
for_window [app_id="org.gnome.Terminal"] border none
# any fullscreen application inhibts idle as well
for_window [class="^.*"] inhibit_idle fullscreen
for_window [app_id="^.*"] inhibit_idle fullscreen

# Floating windows:
for_window [app_id="nmguish"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="blueman-manager"] floating enable
for_window [app_id="thunderbird" title="[0-9]+ Reminder(s)?"] floating enable
for_window [app_id="firefox" title="^Extension:.*"] floating enable


# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+Period exec $climenu
bindsym $mod+Slash exec $appmenu


# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'Do you really want to exit sway?' -b 'Yes' 'swaymsg exit'
bindsym $mod+Shift+x exec swaylock
bindsym $mod+i exec makoctl dismiss
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
### Workspace configuration
set $workspace1 1
set $workspace2 2
set $workspace3 3
set $workspace4 4
set $workspace5 5
set $workspace6 6
set $workspace7 7
set $workspace8 8
set $workspace9 9
set $workspace10 10
workspace_layout tabbed

# Assignments
assign [class="kitty"] $workspace1
assign [app_id="firefox"] $workspace2
assign [app_id="evolution"] $workspace3
assign [app_id="teams"] $workspace8
# https://i3wm.org/docs/userguide.html#assign_workspace
#for_window [class="Spotify"] move to workspace $workspace9
assign [class="KeePassXC"] $workspace10

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
bindsym $left resize shrink width 10px
bindsym $down resize grow height 10px
bindsym $up resize shrink height 10px
bindsym $right resize grow width 10px

# Ditto, with arrow keys
bindsym Left resize shrink width 10px
bindsym Down resize grow height 10px
bindsym Up resize shrink height 10px
bindsym Right resize grow width 10px

# Return to default mode
bindsym Return mode "default"
bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar swaybar_command waybar

# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
#}

# Colors: Default
#
# class                     border   backgr.     text     indic.     child_border
client.focused              #4c7899  #285577     #ffffff  #2e9ef4    #285577
client.focused_inactive     #333333  #5f676a     #ffffff  #484e50    #5f676a
client.unfocused            #333333  #222222     #888888  #292d2e    #222222

# Only for XWayland windows
client.urgent               #2f343a  #900000     #ffffff  #900000    #900000

# Set GTK setttings
set $gnome-schema org.gnome.desktop.interface

exec_always {
systemctl --user import-environment
gsettings set $gnome-schema gtk-theme 'Adwaita-dark'
gsettings set $gnome-schema icon-theme 'Adwaita'
gsettings set $gnome-schema cursor-theme 'Adwaita'
test -e $SWAYSOCK.wob || mkfifo $SWAYSOCK.wob
tail -f $SWAYSOCK.wob | wob
}


# Screenshots
set $screenshot \"$HOME/Pictures/screenshot-$(date '+%Y-%m-%d_%H-%M-%S').png\"
bindsym Print exec grim -s1 $screenshot
bindsym Alt+Print exec (slurp | grim -g- -s1 $screenshot)


# Autostart
exec /usr/libexec/polkit-gnome-authentication-agent-1
exec "GDK_BACKEND=x11 nm-applet --indicator"
exec blueman-applet
exec gammastep -c .config/gammastep/config.ini
exec kitty
#exec firefox
exec keepassxc
